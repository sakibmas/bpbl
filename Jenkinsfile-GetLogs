pipeline {
    agent {
        label params.AgentNode
    }
    stages {
        stage('Get Logs') {
            steps {
                powershell  '''$DestinationPath="$PWD\\logs"
                               if((Test-Path *.zip -PathType Leaf)){
                                 Remove-Item -Path *.zip
                               }
                               if((Test-Path "$DestinationPath" -PathType Container)){
                                 Remove-Item -Path logs -Recurse
                               }
                               New-Item -ItemType Directory -Path "$DestinationPath"
                               $LogFileList=Get-ChildItem $ENV:LogPath -File
                               $LogFileList | ft
                               $LogFileFiltered = $LogFileList | Where-Object{$_.LastWriteTime -gt (Get-Date).AddDays(-$ENV:Days).Date}
                               $LogFileFiltered | ft FullName, LastWriteTime
                               $LogFileFiltered | ForEach-Object{Copy-Item -Path $_.FullName -Destination "$DestinationPath" -Force}'''
            }
        }
        stage('Archive Logs') {
            steps {
                powershell  '''$SourcePath="$PWD\\logs"
                               $ArchivedFileName="$PWD\\$(Get-Date -format yyyy-MM-dd).zip"
                               if((Test-Path "$SourcePath" -PathType Container)){
                                 Compress-Archive -Path "$SourcePath" -DestinationPath "$ArchivedFileName"
                               }'''
            }
        }

    }
    post {
              always {
                 emailext mimeType:'text/html',
                    from: 'jenkins@bergerbd.com',
                    subject: "${JOB_NAME} ${currentBuild.currentResult}",
                    to: "${recipientEmails}",
                    attachLog: true,
                    attachmentsPattern: '*.zip',
                    body: """Build Number: ${BUILD_NUMBER} <br>
                             Node Name: ${NODE_NAME} <br>
                             Workspace: ${WORKSPACE} <br>
                             Artifacts: ${RUN_ARTIFACTS_DISPLAY_URL} <br>
                             For details please browse ${BUILD_URL}console"""
              }


    }
}
